{
  Version: 1.1,
  Content: {
    Headers: []
  },
  StatusCode: Created,
  ReasonPhrase: Created,
  Headers: [
    {
      ConversationId: [
        Guid_1
      ]
    },
    {
      Location: [
        http://localhost/api/todo/<TODO_ITEM_ID>
      ]
    }
  ],
  TrailingHeaders: [],
  RequestMessage: {
    Version: 1.1,
    Content: {
      ObjectType: NewTodoItemModel,
      Formatter: {
        UseDataContractJsonSerializer: false,
        Indent: false,
        MaxDepth: 256,
        SerializerSettings: {
          ContractResolver: {
            DynamicCodeGeneration: false,
            SerializeCompilerGeneratedMembers: false,
            IgnoreSerializableInterface: false,
            IgnoreSerializableAttribute: false,
            IgnoreIsSpecifiedMembers: false,
            IgnoreShouldSerializeMembers: false
          },
          DateFormatString: yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK,
          MaxDepth: 64,
          DateTimeZoneHandling: RoundtripKind,
          DateParseHandling: DateTime,
          Culture: (Default),
          CheckAdditionalContent: false
        },
        SupportedMediaTypes: [
          {
            MediaType: application/json
          },
          {
            MediaType: text/json
          }
        ],
        SupportedEncodings: [
          utf-8,
          utf-16
        ],
        MediaTypeMappings: [
          {
            HeaderName: x-requested-with,
            HeaderValue: XMLHttpRequest,
            HeaderValueComparison: OrdinalIgnoreCase,
            IsValueSubstring: true,
            MediaType: {
              MediaType: application/json
            }
          }
        ]
      },
      Value: {
        Name: it--Guid_2,
        IsComplete: true
      },
      Headers: [
        {
          Content-Type: [
            application/json; charset=utf-8
          ]
        },
        {
          Content-Length: [
            69
          ]
        }
      ]
    },
    Method: {
      Method: POST
    },
    RequestUri: http://localhost/api/todo,
    Headers: [
      {
        Authorization: [
          Bearer <BEARER_TOKEN>
        ]
      }
    ]
  },
  IsSuccessStatusCode: true
}
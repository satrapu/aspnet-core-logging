version: '3.8'

services:
  aspnet-core-logging-dev:
    container_name: aspnet-core-logging-dev-db
    image: postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: >
        pg_isready \
          --host=localhost \
          --port=5432 \
          --dbname=aspnet-core-logging-dev \
          --username=${DB_DEV_POSTGRES_USER}
      interval: "2s"
      timeout: "5s"
      retries: 5
      start_period: "1s"
    volumes:
      - aspnet-core-logging-dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432/tcp"
    networks: 
      - local_postgresql
    environment:
      - POSTGRES_USER=${DB_DEV_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DB_DEV_POSTGRES_PASSWORD}
      - POSTGRES_DB=aspnet-core-logging-dev

  aspnet-core-logging-it:
    container_name: aspnet-core-logging-it-db
    image: postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: >
        pg_isready \
          --host=localhost \
          --port=5432 \
          --dbname=aspnet-core-logging-it \
          --username=${DB_IT_POSTGRES_USER}
      interval: "2s"
      timeout: "5s"
      retries: 5
      start_period: "1s"
    volumes:
      - aspnet-core-logging-it_data:/var/lib/postgresql/data
    ports:
      - "5433:5432/tcp"
    networks: 
      - local_postgresql
    environment:
      - POSTGRES_USER=${DB_IT_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DB_IT_POSTGRES_PASSWORD}
      - POSTGRES_DB=aspnet-core-logging-it
      
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.30
    restart: unless-stopped
    ports:
      # Open Telemetry Protocol port where OpenTelemetry data will be pushed
      # See more here: https://rehansaeed.com/exporting-open-telemetry-data-to-jaeger/#open-telemetry-protocol-otlp.
      - "4317:55680"
      # The ports used by various Jaeger services and their meaning are taken from here: https://github.com/jaegertracing/jaeger/blob/main/crossdock/jaeger-docker-compose.yml
      # and here: https://www.jaegertracing.io/docs/1.30/cli/.
      # jaeger-agent port #1
      - "5775:5775/udp"
      # jaeger-agent port #2
      - "6831:6831/udp"
      # jaeger-agent port #3
      - "6832:6832/udp"
      # jaeger-agent port #4
      - "5778:5778"
      # jaeger-collector port #1
      - "14268:14268"
      # admin port 
      # server health check is available via "/" endpoint (i.e., http://localhost:14269/)
      # server metrics are available via "/metrics" endpoint (i.e., http://localhost:14269/metrics)
      - "14269:14269"
      # jaeger-collector GRPC server port
      - "14250:14250"
      # jaeger-collector Zipkin server port
      - "9411:9411"
      # jaeger-query HTTP server port
      # dashboard is available via "/" endpoint (i.e., http://localhost:16686/)
      - "16686:16686"
      # jaeger-query port #2
      - "16687:16687"
    networks:
      - local_jaeger
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411

  pgadmin:
    container_name: pgadmin-ui
    image: dpage/pgadmin4:5.2
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80/tcp"
    networks:
      - local_postgresql
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - aspnet-core-logging-dev
      - aspnet-core-logging-it
    
  seq:
    container_name: seq
    image: datalust/seq:2021.2
    restart: unless-stopped
    volumes:
      - seq_data:/data
    ports:
      # Ingestion port
      - "5341:5341/tcp"
      # UI port
      - "8888:80/tcp"
    networks:
      - local_seq
    environment:
      - ACCEPT_EULA=Y

volumes:
  aspnet-core-logging-dev_data:
    external: true
  aspnet-core-logging-it_data:
    external: true
  pgadmin_data:
    external: true
  seq_data:
    external: true

networks:
  local_jaeger:
  local_postgresql:
  local_seq:
